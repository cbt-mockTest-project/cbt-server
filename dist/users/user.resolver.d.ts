import { SendFindPasswordMailInput, SendFindPasswordMailOutput } from './dtos/sendFindPasswordMail.dto';
import { CheckPasswordInput, CheckPasswordOutput } from './dtos/checkPassword.dto';
import { MeOutput } from './dtos/me.dto';
import { CoreOutput } from 'src/common/dtos/output.dto';
import { SendVerificationMailInput, SendVerificationMailOutput } from './dtos/sendVerificationMail.dto';
import { LoginInput, LoginOutput } from './dtos/login.dto';
import { UserProfileOutput, UserProfileInput } from './dtos/userProfile.dto';
import { RegisterInput, RegisterOutput } from './dtos/register.dto';
import { User } from './entities/user.entity';
import { UserService } from './user.service';
import { EmailVerificationOutput, EmailVerificationInput } from './dtos/EmailVerification.dto';
import { EditProfileOutput, EditProfileInput } from './dtos/editProfile.dto';
import { RestoreUserInput } from './dtos/restoreUser.dto';
import { ChangePasswordAfterVerifyingOutput, ChangePasswordAfterVerifyingInput } from './dtos/changePasswordAfterVerifying.dto';
export declare class UserResolver {
    private readonly userService;
    constructor(userService: UserService);
    register(registerInput: RegisterInput): Promise<RegisterOutput>;
    userProfile(userProfileInput: UserProfileInput): Promise<UserProfileOutput>;
    login(loginInput: LoginInput, context: any): Promise<LoginOutput>;
    logout(context: any): Promise<CoreOutput>;
    sendVerificationMail(sendVerificationMailInput: SendVerificationMailInput): Promise<SendVerificationMailOutput>;
    me(user: User): Promise<MeOutput>;
    emailVerification(emailVerificationInput: EmailVerificationInput): Promise<EmailVerificationOutput>;
    checkPassword(checkPassWordInput: CheckPasswordInput, user: User): Promise<CheckPasswordOutput>;
    editProfile(editProfileInput: EditProfileInput, user: User): Promise<EditProfileOutput>;
    deleteUser(user: User): Promise<CoreOutput>;
    restoreUser(restoreUserInput: RestoreUserInput): Promise<CoreOutput>;
    sendFindPasswordMail(sendFindPasswordMailInput: SendFindPasswordMailInput): Promise<SendFindPasswordMailOutput>;
    changePasswordAfterVerifying(changePasswordAfterVerifyingInput: ChangePasswordAfterVerifyingInput): Promise<ChangePasswordAfterVerifyingOutput>;
}
